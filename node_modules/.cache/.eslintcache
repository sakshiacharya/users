[{"/home/sakshi/Documents/users/src/index.js":"1","/home/sakshi/Documents/users/src/reportWebVitals.js":"2","/home/sakshi/Documents/users/src/App.js":"3","/home/sakshi/Documents/users/src/redux/store.js":"4","/home/sakshi/Documents/users/src/component/List.jsx":"5","/home/sakshi/Documents/users/src/component/DetailPage.jsx":"6","/home/sakshi/Documents/users/src/redux/reducer/index.js":"7","/home/sakshi/Documents/users/src/redux/Action/fetchUser.js":"8","/home/sakshi/Documents/users/src/redux/Action/detailData.js":"9","/home/sakshi/Documents/users/src/redux/reducer/fetchUserReducer.js":"10"},{"size":661,"mtime":1687529838000,"results":"11","hashOfConfig":"12"},{"size":362,"mtime":1687529838000,"results":"13","hashOfConfig":"12"},{"size":429,"mtime":1687545397205,"results":"14","hashOfConfig":"12"},{"size":323,"mtime":1687529838000,"results":"15","hashOfConfig":"12"},{"size":6420,"mtime":1687546062274,"results":"16","hashOfConfig":"12"},{"size":3847,"mtime":1687545410917,"results":"17","hashOfConfig":"12"},{"size":195,"mtime":1687542399000,"results":"18","hashOfConfig":"12"},{"size":380,"mtime":1687540387000,"results":"19","hashOfConfig":"12"},{"size":479,"mtime":1687542648000,"results":"20","hashOfConfig":"12"},{"size":350,"mtime":1687540231000,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1mjw503",{"filePath":"25","messages":"26","suppressedMessages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37"},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/sakshi/Documents/users/src/index.js",[],[],"/home/sakshi/Documents/users/src/reportWebVitals.js",[],[],"/home/sakshi/Documents/users/src/App.js",["53"],[],"/home/sakshi/Documents/users/src/redux/store.js",["54","55"],[],"/home/sakshi/Documents/users/src/component/List.jsx",["56","57","58","59","60","61"],[],"import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport Modal from 'react-modal';\nimport { fetchUser } from '../redux/Action/fetchUser';\nimport { detailData } from '../redux/Action/detailData';\nexport const List = () => {\n\n  const userList = useSelector(state => state?.fetchUserReducer?.users?.users)\n  const [addItem, setAddItem] = useState(false);\n  const [userData, setUserData] = useState({\n    id: '',\n    name: '',\n    phone: '',\n    email: '',\n    city: '',\n    zipcode: '',\n  });\n\n  \n\n  const [selectedUser, setSelectedUser] = useState(null);\n  const [userListStored, setUserListStored] = useState(userList || []);\n  const [editedUser, setEditedUser] = useState(null);\n\n  useEffect(() => {\n    setUserListStored(userList)\n  }, [userList])\n\n  console.log(userListStored)\n\n  const editUser = (user) => {\n    setEditedUser(user);\n  };\n\n  \n\n\n\n  const addUser = (event) => {\n    event.preventDefault()\n    setAddItem(true);\n    setTimeout(() => {\n      closeModal()\n    }, 2000)\n\n  }\n\n\n  const deleteUser = (userId) => {\n     const updatedUserList = userList.filter((user) => user.id !== userId);\n  setUserListStored(updatedUserList);\n  };\n \n\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchUser())\n  }, [])\n\n\n  const customStyles = {\n    content: {\n      top: '50%',\n      left: '50%',\n      right: 'auto',\n      bottom: 'auto',\n      marginRight: '-50%',\n      transform: 'translate(-50%, -50%)',\n      padding: '10px',\n      // overflowY: 'scroll',\n      // height: '80%'\n\n    },\n  };\n\n\n  Modal.setAppElement('#root');\n\n\n  const [modalIsOpen, setIsOpen] = React.useState(false);\n\n  function openModal() {\n    setIsOpen(true);\n    setAddItem(false)\n  }\n\n  function afterOpenModal() {\n    // references are now sync'd and can be accessed.\n\n  }\n\n  function closeModal(e) {\n    setIsOpen(false);\n  }\n\n\n\n\n\n  return (\n    <React.Fragment>\n\n      <div>\n        <Modal\n          isOpen={modalIsOpen}\n          onAfterOpen={afterOpenModal}\n          onRequestClose={closeModal}\n          style={customStyles}\n          contentLabel=\"add user\">\n          <>\n            {\n              addItem ? <div className='thankyou'>Data is submitted Successfully..</div> :\n\n                <div >\n                  <h1 className=\"header\" >Add New User</h1>\n                  <form className='details' onSubmit={addUser}>\n                    <div>\n                      <label for=\"ID\">ID:</label>\n                      <input id=\"ID\" type=\"number\" placeholder=\"ID\" onChange={(e) => { setUserData({ ...userData, id: e.target.value }) }} required />\n                    </div>\n\n                    <div>\n                      <label for=\"Name\">Name:</label>\n                      <input id=\"Name\" placeholder=\"Name\" type=\"text\" onChange={(e) => { setUserData({ ...userData, name: e.target.value }) }} required />\n                    </div>\n\n                    <div>\n                      <label for=\"Phone\">Phone:</label>\n                      <input id=\"phone\" placeholder=\"phone\" type=\"tel\" onChange={(e) => { setUserData({ ...userData, phone: e.target.value }) }} required maxLength={10} />\n                    </div>\n\n                    <div>\n                      <label for=\"Email\">Email:</label>\n                      <input id=\"Email\" placeholder=\"Email\" type=\"email\" onChange={(e) => { setUserData({ ...userData, email: e.target.value }) }} required />\n                    </div>\n\n                    <div>\n                      <label for=\"City\">City:</label>\n                      <input id=\"City\" placeholder=\"City\" type=\"text\" onChange={(e) => { setUserData({ ...userData, city: e.target.value }) }} required />\n                    </div>\n\n                    <div>\n                      <label for=\"Zipcode\">Zipcode:</label>\n                      <input id=\"Zipcode\" placeholder=\"Zipcode\" type=\"tel\" maxLength={6} onChange={(e) => { setUserData({ ...userData, zipcode: e.target.value }) }} required />\n                    </div>\n\n                \n                    <div className='text-center' >\n                      <div className=\"back-button\" style={{ display: 'flex', flexDirection: 'row' }}>\n                        <button type='submit'>\n\n                          Save</button>\n                        <button onClick={() => closeModal()} >\n                          \n\n                          Close</button>\n                      </div>\n                    </div>\n                  </form>\n\n\n\n                </div>\n            }\n          </>\n        </Modal>\n      </div>\n\n      <div className='main'>\n        <h1>User Management System</h1>\n        <div className='table-data'>\n          <div className='head' >\n            <span className='product'>Users</span>\n            <button onClick={openModal} >+ Add User</button>\n          </div>\n          <div>\n            <table className=\"styled-table\">\n              <thead>\n                <tr>\n                  <th>ID</th>\n                  <th>Name</th>\n                  <th>Phone</th>\n                  <th>Email</th>\n           \n                  <th>City</th>\n                  <th>Zip Code</th>\n                  <th>Action</th>\n                  \n                </tr>\n              </thead>\n              <tbody>\n                <tr>\n                  {\n                    addItem &&\n                    <>\n                      <td>{userData.id}</td>\n                      <td>{userData.name}</td>\n                      <td>{userData.phone}</td>\n                      <td>{userData.email}</td>\n                      <td>{userData.city}</td>\n                      <td>{userData.zipcode}</td>\n                     \n                     \n                    </>\n\n                  }\n                </tr>\n                {userListStored?.map((data, index) => (\n    <tr key={index}>\n      <td>{data.id}</td>\n      <td>{data.name}</td>\n      <td>{data.phone}</td>\n      <td>{data.email}</td>\n      <td>{data.address.city}</td>\n      <td>{data.address.zipcode}</td>\n    \n      <td>\n        <button onClick={() =>  editUser(data)}>Edit</button>\n        <button onClick={() => deleteUser(data.id)}>Delete</button>\n      </td>\n    </tr>\n  ))}\n              </tbody>\n            </table>\n          </div>\n        </div>\n        <div className='text-center'>\n\n       \n\n        </div>\n      </div>\n\n\n    </React.Fragment>\n  )\n}\n","/home/sakshi/Documents/users/src/component/DetailPage.jsx",[],[],"/home/sakshi/Documents/users/src/redux/reducer/index.js",[],[],"/home/sakshi/Documents/users/src/redux/Action/fetchUser.js",[],[],"/home/sakshi/Documents/users/src/redux/Action/detailData.js",[],[],"/home/sakshi/Documents/users/src/redux/reducer/fetchUserReducer.js",[],[],{"ruleId":"62","severity":1,"message":"63","line":2,"column":10,"nodeType":"64","messageId":"65","endLine":2,"endColumn":20},{"ruleId":"66","severity":1,"message":"67","line":5,"column":56,"nodeType":"68","messageId":"69","endLine":5,"endColumn":58},{"ruleId":"66","severity":1,"message":"67","line":5,"column":103,"nodeType":"68","messageId":"69","endLine":5,"endColumn":105},{"ruleId":"62","severity":1,"message":"70","line":3,"column":10,"nodeType":"64","messageId":"65","endLine":3,"endColumn":14},{"ruleId":"62","severity":1,"message":"71","line":6,"column":10,"nodeType":"64","messageId":"65","endLine":6,"endColumn":20},{"ruleId":"62","severity":1,"message":"72","line":22,"column":10,"nodeType":"64","messageId":"65","endLine":22,"endColumn":22},{"ruleId":"62","severity":1,"message":"73","line":22,"column":24,"nodeType":"64","messageId":"65","endLine":22,"endColumn":39},{"ruleId":"62","severity":1,"message":"74","line":24,"column":10,"nodeType":"64","messageId":"65","endLine":24,"endColumn":20},{"ruleId":"75","severity":1,"message":"76","line":61,"column":6,"nodeType":"77","endLine":61,"endColumn":8,"suggestions":"78"},"no-unused-vars","'DetailPage' is defined but never used.","Identifier","unusedVar","no-mixed-operators","Unexpected mix of '&&' and '||'. Use parentheses to clarify the intended order of operations.","LogicalExpression","unexpectedMixedOperator","'Link' is defined but never used.","'detailData' is defined but never used.","'selectedUser' is assigned a value but never used.","'setSelectedUser' is assigned a value but never used.","'editedUser' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["79"],{"desc":"80","fix":"81"},"Update the dependencies array to be: [dispatch]",{"range":"82","text":"83"},[1334,1336],"[dispatch]"]